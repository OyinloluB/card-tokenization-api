version: '3.8'

services:
  api:
    build: .
    container_name: tokenization_api
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/tokenization_db
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - TOKEN_EXPIRE_SECONDS=${TOKEN_EXPIRE_SECONDS}
    volumes:
      - ./:/app
  db:
    image: postgres:15
    container_name: tokenization_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  db-backup:
    image: postgres:15
    container_name: tokenization_db_backup
    restart: always
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backups:/backups
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD}
    command: |
      bash -c '
      mkdir -p /backups
      while true; do
        FILENAME="backup-$$(date +%Y-%m-%d_%H-%M-%S).sql"
        echo "Creating backup: $$FILENAME"
        pg_dump -h db -U ${POSTGRES_USER} ${POSTGRES_DB} > /backups/$$FILENAME
        echo "Backup completed"
        
        # keep only the 7 most recent backups
        ls -t /backups/*.sql | tail -n +8 | xargs -r rm
        
        # Sleep for 24 hours
        sleep 86400
      done
      '

  nginx:
    image: nginx:latest
    container_name: tokenization_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - api
    restart: always

volumes:
  postgres_data:
    driver: local

